name: CI

# Set default shell as interactive (source ~/.bashrc)
defaults:
  run:
    shell: bash -ieo pipefail {0}

# Run only one instance of this workflow at a time
# cancel-in-progress: stop running workflow and run latest instead
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
  # Don't forget to require approval for all outside collaborators
  pull_request:
    branches: '*'
  # Allow manual workflow runs
  workflow_dispatch:

jobs:

  spi:
    runs-on: self-hosted
    timeout-minutes: 20
    # run even if previous job failed
    if: ${{ !cancelled() }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: run spi test
        run: nix-shell --run "make -C submodules/SPI/ clean build-setup && make -C submodules/iob_spi_master_V0.10/ sim-run"

  uart16550:
    runs-on: self-hosted
    timeout-minutes: 5
    # run even if previous job failed
    if: ${{ !cancelled() }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: run uart16550 test
        run: nix-shell --run "make -C submodules/UART16550/ clean build-setup && make -C submodules/iob_uart16550_V0.10/ sim-run"
      
  iverilog-baremetal:
    runs-on: self-hosted
    timeout-minutes: 120
    # run even if previous job failed
    if: ${{ !cancelled() }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: clean
        run: nix-shell --run "make clean"
      - name: setup init_mem ext_mem
        run: nix-shell --run "make setup INIT_MEM=1 RUN_LINUX=0"
      - name: icarus test
        run: nix-shell --run "make -C ../iob_soc_o* sim-run"

  verilator-baremetal:
    runs-on: self-hosted
    timeout-minutes: 90
    # run even if previous job failed
    if: ${{ !cancelled() }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: clean
        run: nix-shell --run "make clean"
      - name: setup no_init_mem ext_mem
        run: nix-shell --run "make setup INIT_MEM=0 RUN_LINUX=0"
      - name: verilator test
        run: nix-shell --run "make -C ../iob_soc_o* sim-run SIMULATOR=verilator"

  
  cyclonev:
    runs-on: self-hosted
    timeout-minutes: 90
    # run even if previous job failed
    if: ${{ !cancelled() }}
    # run after indicated job
    needs: [ verilator-baremetal ]
  
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: test baremetal
        run: make fpga-run RUN_LINUX=0 BOARD=CYCLONEV-GT-DK
      - name: test linux
        run: make test-linux-fpga-connect BOARD=CYCLONEV-GT-DK
  
  aes-ku040:
    runs-on: self-hosted
    timeout-minutes: 90
    # run even if previous job failed
    if: ${{ !cancelled() }}
    # run after indicated job
    needs: [ verilator-baremetal ]
  
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
      - name: test baremetal
        run: make fpga-run RUN_LINUX=0 BOARD=AES-KU040-DB-G
      - name: test linux
        run: make test-linux-fpga-connect BOARD=AES-KU040-DB-G BOOT_FLOW=CONSOLE_TO_EXTMEM

##  doc:
##    runs-on: self-hosted
##    timeout-minutes: 60
##    if: ${{ !cancelled() }}
##    needs: [ cyclonev, aes-ku040 ]
##  
##    steps:
##      - uses: actions/checkout@v4
##        with:
##          submodules: 'recursive'
##      - name: clean
##        run: nix-shell --run "make clean"
##      - name: setup
##        run: nix-shell --run "make setup"
##      - name: doc test
##        run: nix-shell --run "make -C ../iob_soc_o* doc-test"
